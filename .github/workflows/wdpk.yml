# WD MyCloud package builder CI
# by Stefaan Ghysels
#
# Please note that I started with local development with https://github.com/nektos/act
# but once that was working it became clear that many features of github actions were not supported yet
# Hence the messy code below.

name: WD MyCloud package CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container:
      image: wdpk/wdpk
      options: -v ${{github.workspace}}/packages:/github/workspace/packages

    # define all the OS5 supporting platforms and a prettier name
    strategy:
      matrix:
       include:
        - model: EX4100
          platform: WDMyCloudEX4100
        - model: DL4100
          platform: WDMyCloudDL4100
        - model: EX2100
          platform: WDMyCloudEX2100
        - model: DL2100
          platform: WDMyCloudDL2100
        - model: MirrorG2
          platform: WDMyCloudMirror
        - model: EX2Ultra
          platform: MyCloudEX2Ultra
        - model: PR4100
          platform: MyCloudPR4100
        - model: PR2100
          platform: MyCloudPR2100

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Get package that was changed in the last commit
        id: diff
        run: |
          wget ${{ github.event.pull_request.diff_url }} -O pr.diff
          pkg=$(grep "^\+\+\+ b/wdpk/" pr.diff | cut -d/ -f3 | uniq)

          # concat packages into single line
          pkgs=""
          for p in $pkg; do
            pkgs="${pkgs}${p} "
          done
          echo "Packages: ${pkgs}"
          echo "PACKAGE=${pkgs}" >> $GITHUB_ENV

      # TODO: use matrix instead
      - name: Get platforms
        id: platforms
        run: |
          PLATFORMS="WDMyCloudEX4100-EX4100 WDMyCloudDL4100-DL4100 WDMyCloudEX2100-EX2100 WDMyCloudDL2100-DL2100 WDMyCloudMirror-MirrorG2 MyCloudEX2Ultra-EX2Ultra MyCloudPR4100-PR4100 MyCloudPR2100-PR2100"
          echo "Use act ${use_act}"
          echo "PLATFORMS=${PLATFORMS}" >> $GITHUB_ENV

      - name: Make APKG packages for selected platforms
        id: make_apkg
        env:
          PLATFORM: ${{ matrix.platform }}
          MODEL: ${{ matrix.model }}
        run: |
          pkg=$(echo ${PACKAGE} | cut -d' ' -f1)
          echo ::set-output name=pkg::"$pkg"
          cd wdpk/${pkg}
          DATE="$(date +"%m%d%Y")"
          CWD="$(pwd)"
          VERSION="$(awk '/Version/{print $NF}' apkg.rc)"
          echo ::set-output name=version::"$VERSION"
          NAME="$(awk '/AddonShowName/{print $NF}' apkg.rc)"
          echo ::set-output name=name::"$NAME"

          echo "Building ${pkg} version ${VERSION}"
          echo "$(ls -l ../..)"
          RELEASE_DIR="../../packages/${pkg}/OS5"
          mkdir -p "${RELEASE_DIR}"

          echo "PLF ${PLATFORM} - $arr - ${PACKAGE}"
          echo "Build ${pkg} for $MODEL"
          ../../mksapkg-OS5 -E -s -m ${PLATFORM} > /dev/null
          mv ../${PLATFORM}*.bin\(* ../${pkg}_${VERSION}_${MODEL}.bin
          echo "$(ls -l ..)"

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.make_apkg.outputs.pkg }}_${{ steps.make_apkg.outputs.version }}_OS5
          path: wdpk/*_*_*.bin

      - name: Upload binary packages to Bintray when a tag is included
        uses: masofcon/upload-to-bintray-github-action@master
        with:
          source_path: ./wdpk/${{steps.make_apkg.outputs.pkg}}_${{steps.make_apkg.outputs.version}}_*.bin
          api_user: tfl
          api_key: ${{ secrets.BINTRAY_API_KEY }} # An API key can be obtained from the user profile page.
          repository: wdpksrc
          package: ${{ steps.make_apkg.outputs.name }}
          version: ${{ steps.make_apkg.outputs.version }}
          upload_path: ${{ steps.make_apkg.outputs.pkg }}/OS5
          publish: 1
          override: 0
        if: env.HEAD_TAG != ''